<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.nhou.mapper.store.StoreMapper">

	<insert id="insert" useGeneratedKeys="true" keyProperty="productId">
	INSERT INTO product (productName, price, stock, member_userId, productCategory_categoryId)
	VALUES (#{productName}, #{price}, #{stock}, #{member_userId}, #{productCategory_categoryId})
	</insert>
	
	<insert id="insertFile">
	update product 
 	set 
 		productImage = #{productImage},
 	WHERE productId = #{product_productId}
	</insert>
	
	<insert id="insertFile2">
	INSERT INTO productFile (product_productId, productFileName)
	VALUES (#{product_productId}, #{productFileName})
	</insert>	
	
<!--<insert id="insertCategory">		
	INSERT INTO productCategory (categoryId, categoryName)
	VALUES (#{categoryId}, #{categoryName})
	</insert>
		
	insert id="insertInfo">
	INSERT INTO productInfo (productInfoId, productContents, color, size)
	VALUES (#{productInfoId}, #{productContents}, #{color}, #{size})
	</insert>-->

<!-- 리스트 목록 -->
<select id="list" resultType="com.nhou.domain.store.StoreDto" >
SELECT *
FROM
	product
ORDER BY productId DESC
</select>

<!-- 검색 조건 -->
<sql id="criteria">
and
	<trim prefix="(" suffix=")" prefixOverrides="OR">
		<foreach item='type' collection="cri.typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'P'.toString()">
						p.productName LIKE #{cri.keyword}
					</when>
					<when test="type == 'M'.toString()">
						p.member_userId LIKE #{cri.keyword}
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>

<!-- 페이지네이션 검색 카테고리 -->
<select id="getListWithPaging" resultType="com.nhou.domain.store.StoreDto">
SELECT
	p.productId,
	p.productName,
	p.member_userId,
	p.price,
	p.stock,
	p.insertDatetime,
	p.productCategory_categoryId,
	m.nickName,
	pc.categoryName
FROM 
	product p LEFT JOIN member m ON p.member_userId = m.userId
			  LEFT JOIN productCategory pc ON p.productCategory_categoryId = pc.categoryId
WHERE 1=1
<!-- 검색조건 -->
<if test="cri.type!=null and cri.type!=''">
	<include refid="criteria"></include>
</if>
<!-- 카테고리 필터링 -->
<if test ="category !=null and category != ''">
	and pc.categoryName = #{category}
</if>

GROUP BY p.productId
ORDER BY p.productId DESC
LIMIT #{offset}, #{records}	  
</select>


<!-- 전체 페이지 아이템수 -->
<select id="getTotalCount" resultType="int">
SELECT COUNT(*)
FROM product p
	<!-- 검색조건 호출 -->
	WHERE 1=1
	<if test="cri.type!=null and cri.type!=''">
	<![CDATA[
	]]>
	<include refid="criteria"></include>
	</if>
</select>
	
<!-- 	<select id="Replylist">
	SELECT
		productReplyId,
		star
	FROM product
	ORDER BY productReplyId DESC;	
	</select> -->
	
	<select id="select" resultMap="getStore">
	SELECT
		p.productId,
		p.productName,
		p.price,
		pf.productFileName,
		pf.productImage,
		pc.categoryId,
		pc.categoryName,
		m.nickName,
		p.stock
	FROM 
		product p LEFT JOIN productFile pf ON p.productId = pf.product_productId
				  LEFT JOIN productCategory pc ON p.productCategory_categoryId = pc.categoryId
			      LEFT JOIN member m ON p.member_userId = m.userId
	WHERE
		p.productId = #{productId}	
	</select>
	
	<resultMap type="com.nhou.domain.store.StoreDto" id="getStore">
		<result column="productId" property="productId"></result>
		<result column="productName" property="productName"></result>
		<result column="price" property="price"></result>
		<result column="productImage" property="productImage"></result>
		<result column="categoryId" property="categoryId"></result>
		<result column="member_userId" property="member_userId"></result>
		<result column="nickName" property="nickName"></result>
		<result column="stock" property="stock"></result>
		<result column="categoryName" property="categoryName"></result>
		<collection property="productFileName" ofType="string" >
			<result column="productFileName" property="productFileName"></result>
		</collection>
	</resultMap>
	
	<update id="update">
	UPDATE product
	SET
		productId = #{productId}, 
		productName = #{productName}, 
		price = #{price}, 
		stock = #{stock}
	WHERE
		productId = #{productId}
	</update>
	
	<delete id="delete">
	DELETE FROM product
	WHERE productId = #{productId}
	</delete>

<!-- 상품 리스트 총 갯수 -->
<select id="countAll" resultType="int">
SELECT COUNT(*) FROM product
WHERE
	<trim prefixOverrides="OR">
		<if test="type == 'all' or type == 'productName'">
			productName LIKE #{keyword}
		</if>
		
		<if test="type == 'all' or type == 'nickName'">
			OR member_userId LIKE #{keyword}
		</if>
	</trim>

</select>

</mapper>
