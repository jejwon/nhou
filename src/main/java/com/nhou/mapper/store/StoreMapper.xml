<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.nhou.mapper.store.StoreMapper">

	<insert id="insert" useGeneratedKeys="true" keyProperty="productId">
	INSERT INTO product (productImage, productName, productContent, price, stock, member_userId, productCategory_categoryId)
	VALUES (#{productImage}, #{productName}, #{productContent}, #{price}, #{stock}, #{member_userId}, #{productCategory_categoryId})
	</insert>

	<insert id="insertFile">
	UPDATE product 
 	SET 
 		productImage = #{productImage}
 	WHERE productId = #{product_productId}
	</insert>
	
	<insert id="insertFile2">
	INSERT INTO productFile (product_productId, productFileName)
	VALUES (#{product_productId}, #{productFileName})
	</insert>

	<!-- 리스트 목록 -->
	<select id="list" resultType="com.nhou.domain.store.StoreDto" >
	SELECT *
	FROM
		product
	ORDER BY productId DESC
	</select>

	<!-- 검색 조건 -->
	<sql id="criteria">
	and
		<trim prefix="(" suffix=")" prefixOverrides="OR">
			<foreach item='type' collection="cri.typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'P'.toString()">
							p.productName LIKE #{cri.keyword}
						</when>
						<when test="type == 'M'.toString()">
							p.member_userId LIKE #{cri.keyword}
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

	<!-- 페이지네이션 검색 카테고리 -->
	<select id="getListWithPaging" resultType="com.nhou.domain.store.StoreDto">
	SELECT
		p.productId,
		p.productImage,
		p.productName,
		p.member_userId,
		p.price,
		p.stock,
		p.insertDatetime,
		p.productCategory_categoryId,
		m.nickName,
		pc.categoryName
	FROM 
		product p LEFT JOIN member m ON p.member_userId = m.userId
				  LEFT JOIN productCategory pc ON p.productCategory_categoryId = pc.categoryId
	WHERE 1=1
	<!-- 카테고리 분류 -->
	<if test="productCategory_categoryId != null and productCategory_categoryId !=''">
	AND p.productCategory_categoryId = #{productCategory_categoryId}
	</if>
	<!-- 검색조건 -->
	<if test="cri.type!=null and cri.type!=''">
		<include refid="criteria"></include>
	</if>
	<!-- 카테고리 필터링 -->
	<if test ="category !=null and category != ''">
		and pc.categoryName = #{category}
	</if>

	GROUP BY p.productId
	ORDER BY p.productId DESC
	LIMIT #{offset}, #{records}	  
	</select>


	<!-- 전체 페이지 아이템수 -->
	<select id="getTotalCount" resultType="int">
	SELECT COUNT(*)
	FROM product p
		<!-- 검색조건 호출 -->
		WHERE 1=1
		<if test="cri.type!=null and cri.type!=''">
		<![CDATA[
		]]>
		<include refid="criteria"></include>
		</if>
	</select>	
	
	<!-- <select id="list" resultType="com.nhou.domain.store.StoreDto">
	SELECT
		p.productId,
		p.productName,
		p.price,
		p.member_userId,
        p.productCategory_categoryId,
        p.productImage,	
        pc.categoryName,
        m.nickName,
        m.userId
	FROM 
		product p LEFT JOIN member m ON p.member_userId = m.userId
				  LEFT JOIN productCategory pc ON p.productCategory_categoryId = pc.categoryId
	ORDER BY productId DESC;	
	</select>  -->
		

	<select id="select" resultMap="getStore">
	SELECT
		p.productId,
		p.productName,
		p.price,
		p.stock,
		p.productImage,
		p.productContent,	
		p.member_userId,
		pf.productFileName,
		pc.categoryId,
		pc.categoryName,
		m.userId,
		m.nickName,
		COUNT(DISTINCT pr.productReplyId) reviewCount	
	FROM 
		product p LEFT JOIN member m ON p.member_userId = m.userId
				  LEFT JOIN productFile pf ON p.productId = pf.product_productId
				  LEFT JOIN productReply pr ON p.productId = pr.product_productId
				  LEFT JOIN productCategory pc ON p.productCategory_categoryId = pc.categoryId
	WHERE
		p.productId = #{productId}	
	</select>
	
	<resultMap type="com.nhou.domain.store.StoreDto" id="getStore">
		<result column="productId" property="productId"></result>
		<result column="productName" property="productName"></result>
		<result column="productImage" property="productImage"></result>
		<result column="price" property="price"></result>
		<result column="stock" property="stock"></result>
		
		<result column="productContent" property="productContent"></result>
		<result column="reviewCount" property="reviewCount"></result>
			
		<result column="categoryId" property="categoryId"></result>
		<result column="member_userId" property="member_userId"></result>
		<result column="nickName" property="nickName"></result>
		<result column="categoryName" property="categoryName"></result>
		
		<collection property="productFileName" ofType="string" >
			<result column="productFileName" property="productFileName"></result>
		</collection>
	</resultMap>
	
	<update id="update">
	UPDATE product
	SET
		productId = #{productId}, 
		productName = #{productName},
		productContent = #{productContent}, 
		price = #{price},
		productCategory_categoryId = #{productCategory_categoryId},
		stock = #{stock}
	WHERE
		productId = #{productId}
	</update>
	
	<delete id="deleteFileByStoreId">
	DELETE FROM productFile
	WHERE product_productId = #{product_productId}
	</delete>
	
	<delete id="deleteFileByStoreIdAndFileName">
	DELETE FROM productFile
	WHERE product_productId = #{product_productId} AND productFileName = #{productFileName}
	</delete>
	
	<delete id="delete">
	DELETE FROM product
	WHERE productId = #{productId}
	</delete>

	<!-- 상품 리스트 총 갯수 -->
	<select id="countAll" resultType="int">
	SELECT COUNT(*) FROM product
	WHERE
		<trim prefixOverrides="OR">
			<if test="type == 'all' or type == 'productName'">
				productName LIKE #{keyword}
			</if>
		
			<if test="type == 'all' or type == 'nickName'">
				OR member_userId LIKE #{keyword}
			</if>
		</trim>
	</select>
<!-- 카테고리 조회 -->
<select id="getCateList" resultType="com.nhou.domain.store.CategoryDto">
SELECT 
	pc.categoryId,
	pc.categoryName,
	p.productCategory_categoryId
FROM
productCategory pc LEFT JOIN product p ON pc.categoryId = p.productCategory_categoryId
</select>

</mapper>
