<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.nhou.mapper.member.MemberMapper">
 <!-- 회원가입 정보 저장 -->
 <insert id="insertMember">
 INSERT INTO member 
 (userId, userName, password, nickName, email, birthDate, address1, address2, postal, phone)
 VALUES
 (#{userId}, #{userName}, #{password}, #{nickName}, #{email}, #{birthDate}, #{address1}, #{address2}, #{postal}, #{phone})
</insert>
<!--회원 목록 보기 -->
<select id="selectById" resultMap="memberMap">
	SELECT 
		userId,
		userName, 
		password, 
		nickName, 
		email, 
		birthDate, 
		address1,
		address2,
		postal,
		phone,
		auth
	FROM
		member 
	WHERE
		userId = #{userId}
	</select>
	
	<resultMap type="com.nhou.domain.member.MemberDto" id="memberMap">
		<id column="userId" property="userId"></id>
		<result column="userName" property="userName"/>
		<result column="password" property="password"/>
		<result column="nickName" property="nickName"/>
		<result column="email" property="email"/>
		<result column="birthDate" property="birthDate"/>
		<result column="address1" property="address1"/>
		<result column="address2" property="address2"/>
		<result column="postal" property="postal"/>
		<result column="phone" property="phone"/>
		<result column="auth" property="auth"/>
	</resultMap>
	
	<select id="selectAll" resultType="com.nhou.domain.member.MemberDto">
	SELECT 
		userId,
		userName, 
		'숨김' password, 
		nickName, 
		email,
		auth,
		insertDatetime
	FROM
		member 
	ORDER BY userId
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="update">
	UPDATE member
	SET 
		userName = #{userName},
		<!-- <if test="password != null">
	    password = #{password}
		</if>-->
		nickName = #{nickName}, 
		email = #{email}, 
		address1 = #{address1}, 
		address2 = #{address2}, 
		postal = #{postal}, 
		phone = #{phone},
		auth = #{auth}
	WHERE 
		userId = #{userId}	
		
	</update>
	
<!-- 회원탈퇴 -->
<delete id="deleteById">
DELETE 
FROM 
	member 
WHERE 
	userId = #{userId}
AND
	password = #{password}
</delete>

<!-- 판매자 판매목록 가져오기 -->
<select id="getUserSellList" resultMap="userSellerMap">
SELECT
	m.userId,
	m.nickName,
	p.productId,
	p.productName,
	p.insertDatetime,
	p.stock,
	p.price
	<!-- date_format(p.insertDatetime, '%Y-%m-%d') -->
FROM member m LEFT JOIN product p ON m.userId = p.member_userId
WHERE
	m.userId = #{userId}
ORDER BY
	p.productId DESC
</select>

<resultMap type="com.nhou.domain.member.MemberDto" id="userSellerMap">
	<id column="userId" property="userId"/>
	<result column="nickName" property="nickName"/>
	<collection property="userSellList" resultMap="userSellList"></collection>
</resultMap>

<resultMap type="com.nhou.domain.store.StoreDto" id="userSellList">
	<result column="productId" property="productId"/>
	<result column="productName" property="productName"/>
	<result column="insertDatetime" property="insertDatetime"/>
	<result column="stock" property="stock"/>
	<result column="price" property="price"/>
</resultMap>

<!-- 유저정보 중복검사 -->
<select id="selectByuserId" resultType="com.nhou.domain.member.MemberDto">
SELECT * FROM member WHERE userId = #{userId}
</select>

<select id="selectyByNickName" resultType="com.nhou.domain.member.MemberDto">
SELECT * FROM member WHERE nickName = #{nickName}
</select>

<select id="selectByEmail" resultType="com.nhou.domain.member.MemberDto">
SELECT * FROM member WHERE email  = #{email}
</select>

<!-- 회원 검색 -->
<select id="selectAllMemberCount" resultType="int">
SELECT COUNT(*)
FROM member
WHERE
	<trim prefixOverrides="OR">
	<if test="type == 'all' or type == 'userId'">
 		OR userId LIKE #{keyword}
	</if>
	<if test="type == 'all' or type == 'userName'">
 		OR userName LIKE #{keyword}
	</if>
	</trim>
</select>

<!-- 모든 회원정보 List로 가져오기 , 페이지네이션 & 검색 기능 추가 -->
<select id="selectMemberList" resultMap="memberListMap">
SELECT 
 	userId,
 	userName,
 	'****' password,
 	nickName,
 	address1,
 	address2,
 	email,
 	birthDate,
 	phone,
 	auth
FROM
 	member
WHERE
 	<trim prefixOverrides="OR">
 	<if test="type == 'all' or type == 'userId'">
 		OR userId LIKE #{keyword}
 	</if>
 	<if test="type == 'all' or type == 'userName'">
 		OR userName LIKE #{keyword}
 	</if>
 	</trim>
ORDER BY userName
LIMIT #{offset}, #{records}
</select>

<resultMap type="com.nhou.domain.member.MemberDto" id="memberListMap">
	<id column="userId" property="userId" />
 	<result column="userName" property="userName" />
 	<result column="password" property="password" />
 	<result column="nickName" property="nickName" />
 	<result column="email" property="email" />
 	<result column="address1" property="address1" />
 	<result column="address2" property="address2" />
 	<result column="birthDate" property="birthDate" />
 	<result column="phone" property="phone" />
 	<result column="auth" property="auth"/>
</resultMap>

<!-- userId 모든 정보 조회 -->
<select id="selectMemberInfoByUserId" resultMap="memberList">
SELECT
	userId,
 	userName,
 	password,
 	nickName,
 	address1,
 	address2,
 	email,
 	birthDate,
 	phone,
 	auth,
 	insertDatetime
 FROM
 	member
 WHERE
 	userId = #{userId}
</select>
<resultMap type="com.nhou.domain.member.MemberDto" id="memberList">
	<id column="userId" property="userId" />
 	<result column="userName" property="userName" />
 	<result column="password" property="password" />
 	<result column="nickName" property="nickName" />
 	<result column="email" property="email" />
 	<result column="address1" property="address1" />
 	<result column="address2" property="address2" />
 	<result column="birthDate" property="birthDate" />
 	<result column="phone" property="phone" />
 	<result column="auth" property="auth"/>
 	<result column="insertDatetime" property="insertDatetime"/>
</resultMap>

<!-- 회원권한 수정 -->
<update id="updateAuth">
UPDATE 
	member 
SET
	auth = #{auth}
WHERE 
	userId = #{userId}
</update>
 </mapper>